{"version":3,"sources":["context.js","components/SearchForm/SearchFormComponents.js","components/SearchForm/index.js","components/Movies/MoviesComponents.js","components/Movies/index.js","components/Header/HeaderComponents.js","components/Header/index.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","movie","setMovie","movies","setMovies","url","fetchData","useCallback","a","fetch","response","json","data","console","log","useEffect","Provider","value","handleChange","e","target","handleSubmit","preventDefault","useGlobalContext","useContext","FormContainer","styled","div","FormSearch","FormControl","form","Label","label","InputAndSubmit","Input","input","Submit","SearchForm","onSubmit","htmlFor","type","id","placeholder","onChange","text","MoviesContainer","MoviesWrapper","Card","Movies","style","textAlign","length","slice","map","item","index","name","description","genres","duration","rating","color","margin","background","padding","marginRight","fontWeight","borderRadius","substring","undefined","HeaderContainer","Title","h1","MyHeader","App","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c2fedee.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movie, setMovie] = useState(\"\");\n  const [movies, setMovies] = useState(\"\");\n  const url = `https://movie-recommender-appi.herokuapp.com/movies/`;\n\n  const handleChange = (e) => {\n    setMovie(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchTerm(movie);\n    setMovie(\"\");\n  };\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    const response = await fetch(`${url}${searchTerm}`);\n    const data = await response.json();\n    console.log(data);\n    setLoading(false);\n    setMovies(data);\n  }, [searchTerm, url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [searchTerm, fetchData]);\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        handleChange,\n        movie,\n        handleSubmit,\n        movies,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import styled from \"styled-components\";\n\n// FormContainer,\n//   FormSearch,\n//   FormControl,\n//   Label,\n//   Input,\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FormSearch = styled.div``;\n\nexport const FormControl = styled.form`\n  min-height: 100px;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: palegoldenrod;\n  padding: 30px;\n  border-radius: 10px;\n\n  @media screen and (max-width: 480px) {\n    padding: 10px;\n    width: 330px;\n  }\n`;\n\nexport const Label = styled.label`\n  align-self: center;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nexport const InputAndSubmit = styled.div`\n  width: 80%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 75%;\n  border-radius: 6px;\n`;\n\nexport const Submit = styled.input`\n  width: 20%;\n  height: 35px;\n  margin-left: 10px;\n  background: black;\n  border-radius: 5px;\n  border: solid black;\n  color: white;\n  cursor: pointer;\n\n  @media screen and (max-width: 480px) {\n    margin: 15px;\n    width: 100px;\n  }\n\n  &:hover {\n    background: white;\n    transition-duration: 1s;\n    color: black;\n  }\n`;\n","import React from \"react\";\nimport { useGlobalContext } from \"../../context\";\nimport {\n  FormContainer,\n  FormSearch,\n  FormControl,\n  Label,\n  Input,\n  Submit,\n  InputAndSubmit,\n} from \"./SearchFormComponents\";\n\nconst SearchForm = () => {\n  const { handleChange, movie, handleSubmit } = useGlobalContext();\n\n  return (\n    <FormContainer>\n      <FormSearch onSubmit={(e) => handleSubmit(e)}>\n        <FormControl>\n          <Label htmlFor=\"name\">Search Movie</Label>\n          <InputAndSubmit>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Enter a movie name (eg. Star Wars)\"\n              value={movie}\n              onChange={(e) => handleChange(e)}\n            />\n            <Submit type=\"submit\" text=\"Search\" />\n          </InputAndSubmit>\n        </FormControl>\n      </FormSearch>\n    </FormContainer>\n  );\n};\n\nexport default SearchForm;\n","import styled from \"styled-components\";\n\nexport const MoviesContainer = styled.div`\n  width: 100%;\n`;\n\nexport const MoviesWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 50px;\n\n  @media screen and (max-width: 480px) {\n    padding: 10px;\n  }\n`;\n\nexport const Card = styled.div`\n  width: 250px;\n  height: 300px;\n  margin: 30px;\n  display: flex;\n  flex-direction: column;\n  border: solid 1px black;\n  border-radius: 7px;\n  padding: 15px;\n  box-shadow: 4px 7px 15px 3px;\n  cursor: pointer;\n  background: black;\n\n  /* &:hover {\n    opacity: 0%;\n    transition-duration: 0.5s;\n  } */\n`;\n","import React from \"react\";\nimport { useGlobalContext } from \"../../context\";\nimport { MoviesContainer, MoviesWrapper, Card } from \"./MoviesComponents\";\n\nconst Movies = () => {\n  const { loading, movies } = useGlobalContext();\n  if (loading) {\n    return <h1 style={{ textAlign: \"center\" }}>Loading...</h1>;\n  } else {\n    return (\n      <MoviesContainer>\n        <MoviesWrapper>\n          {movies.length > 1 &&\n            movies.slice(1).map((item, index) => {\n              const { name, description, genres, duration, rating } = item;\n              return (\n                <Card key={index}>\n                  <h3\n                    style={{\n                      color: \"white\",\n                      margin: \"5px\",\n                      textAlign: \"center\",\n                    }}\n                  >{`${index + 1}. ${name}`}</h3>\n                  <p style={{ color: \"white\", margin: \"5px\" }}>\n                    <span\n                      style={{\n                        background: \"goldenrod\",\n                        padding: \"2px\",\n                        marginRight: \"5px\",\n                        fontWeight: \"700\",\n                        color: \"black\",\n                        borderRadius: \"3px\",\n                      }}\n                    >\n                      Description:{\" \"}\n                    </span>\n                    {description.substring(0, 120)}...\n                  </p>\n                  <p style={{ color: \"white\", margin: \"5px\" }}>\n                    <span\n                      style={{\n                        background: \"goldenrod\",\n                        padding: \"2px\",\n                        marginRight: \"5px\",\n                        fontWeight: \"700\",\n                        color: \"black\",\n                        borderRadius: \"3px\",\n                      }}\n                    >\n                      Genres:{\" \"}\n                    </span>{\" \"}\n                    {genres}\n                  </p>\n                  <p style={{ color: \"white\", margin: \"5px\" }}>\n                    <span\n                      style={{\n                        background: \"goldenrod\",\n                        padding: \"2px\",\n                        marginRight: \"5px\",\n                        fontWeight: \"700\",\n                        color: \"black\",\n                        borderRadius: \"3px\",\n                      }}\n                    >\n                      Duration:{\" \"}\n                    </span>{\" \"}\n                    {duration}\n                  </p>\n                  <p style={{ color: \"white\", margin: \"5px\" }}>\n                    <span\n                      style={{\n                        background: \"goldenrod\",\n                        padding: \"2px\",\n                        marginRight: \"5px\",\n                        fontWeight: \"700\",\n                        color: \"black\",\n                        borderRadius: \"3px\",\n                      }}\n                    >\n                      Rating:{\" \"}\n                    </span>{\" \"}\n                    {rating}\n                  </p>\n                </Card>\n              );\n            })}\n          {movies.length === undefined &&\n          movies[\"message\"] === \"No data found\" ? (\n            <h1>Search for a movie to find similar movies</h1>\n          ) : (\n            <h1>{movies[\"message\"]}</h1>\n          )}\n        </MoviesWrapper>\n      </MoviesContainer>\n    );\n  }\n};\n\nexport default Movies;\n","import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  margin: 50px;\n  font-family: \"Lobster\", cursive;\n  color: lightsalmon;\n  text-shadow: 7px 6px 9px black;\n`;\n\nexport const Title = styled.h1`\n  font-size: 58px;\n`;\n","import React from \"react\";\nimport { HeaderContainer, Title } from \"./HeaderComponents\";\n\nconst MyHeader = () => {\n  return (\n    <HeaderContainer>\n      <Title>Movie Recommender Demo</Title>\n    </HeaderContainer>\n  );\n};\n\nexport default MyHeader;\n","import React from \"react\";\nimport SearchForm from \"./components/SearchForm\";\nimport Movies from \"./components/Movies\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <SearchForm />\n      <Movies />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <AppProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}